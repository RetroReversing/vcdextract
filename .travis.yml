matrix:
  include:

    # linux gcc
    - compiler: gcc
      env: testenv="linux gcc"

    # linux clang
    - compiler: clang
      env: testenv="linux clang"

    # os x qt port
    - os: osx
      env: testenv="os x clang"
      compiler: clang
      script:
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - make
              
    # mingw-w64 windows cross compile
    - compiler: gcc
      env: testenv="mingw-w64 windows cross compile"
      addons:
        apt:
          packages:
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-x86-64
            - binutils-mingw-w64-x86-64
            - mingw-w64-x86-64-dev
      script:
        # create toolchain file so we can cross compile
        - echo 'SET(CMAKE_SYSTEM_NAME Windows)' > toolchain.cmake
        - echo 'SET(CMAKE_C_COMPILER   x86_64-w64-mingw32-gcc)' >> toolchain.cmake
        - echo 'SET(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)' >> toolchain.cmake
        - echo 'SET(CMAKE_RC_COMPILER x86_64-w64-mingw32-windres)' >> toolchain.cmake
        - cmake -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake ..
        - make

language: cpp

sudo: false

before_install:
  # only build the first port if running a coverity scan. otherwise coverity will attempt to analyze all the builds
  - if ([[ "${TRAVIS_JOB_NUMBER##*.}" != "1" ]] && [[ "${TRAVIS_BRANCH}" == "coverity_scan" ]]); then false ; fi
  - mkdir build
  - cd build
  - export GIT_HASH=$(git rev-parse --short HEAD)

script:
  - cmake ..
  - make
